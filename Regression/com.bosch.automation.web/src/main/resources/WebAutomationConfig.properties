
# The browser versions listed here must match (lower case) all enum literals provided by inner enum Class DriverSetup.Browser

# Chrome browser details
chrome_60_0_3112_101.zip=//ubk-alm-file-share.de.bosch.com/Public/Client_Applications/PortableBrowsers/chrome_60_0_3112_101.zip
# Path in the zip up to the executable of the browser
chrome_60_0_3112_101.bin=App/Chrome-bin/Chrome.exe
# Path to selenium driver for this browser version
chrome_60_0_3112_101.seleniumdriver=//ubk-alm-file-share.de.bosch.com/Public/Client_Applications/PortableBrowsers/chrome_60_0_3112_101_chromedriver.exe

# Chrome browser details
chrome_65_0_3325_181.zip=//ubk-alm-file-share.de.bosch.com/Public/Client_Applications/PortableBrowsers/chrome_65_0_3325_181.zip
# Path in the zip up to the executable of the browser
chrome_65_0_3325_181.bin=App/Chrome-bin/Chrome.exe
# Path to selenium driver for this browser version
chrome_65_0_3325_181.seleniumdriver=//ubk-alm-file-share.de.bosch.com/Public/Client_Applications/PortableBrowsers/chrome_65_0_3325_181_chromedriver.exe

# The driver to take in case the locally installed chrome browser shall be used
chrome.seleniumdriver=//ubk-alm-file-share.de.bosch.com/Public/Client_Applications/PortableBrowsers/chrome_65_0_3325_181_chromedriver.exe

# Firefox browser details
firefox_52_3_0_esr.zip=//ubk-alm-file-share.de.bosch.com/Public/Client_Applications/PortableBrowsers/firefox_52_3_0_esr.zip
# Path in the zip up to the executable of the browser
firefox_52_3_0_esr.bin=App/Firefox64/firefox.exe
# Path to selenium driver for this browser version
firefox_52_3_0_esr.seleniumdriver=//ubk-alm-file-share.de.bosch.com/Public/Client_Applications/PortableBrowsers/firefox_52_3_0_esr_geckodriver.exe

# Firefox browser details
firefox_102_0_8.zip=//ubk-alm-file-share.de.bosch.com/Public/Client_Applications/PortableBrowsers/firefox_102_0_8.zip
# Path in the zip up to the executable of the browser
# Path in the zip up to the executable of the browser
firefox_102_0_8.bin=App/Firefox64/firefox.exe
# Path to selenium driver for this browser version
firefox_102_0_8.seleniumdriver=//ubk-alm-file-share.de.bosch.com/Public/Client_Applications/PortableBrowsers/firefox_102_0_8_geckodriver.exe

# The driver to take in case the locally installed firefox browser shall be used
firefox.seleniumdriver=//ubk-alm-file-share.de.bosch.com/Public/Client_Applications/PortableBrowsers/firefox_52_3_0_esr_geckodriver.exe


# Take any of the custom versions listed above or you can also try simply one of these: firefox, chrome
# Then it is tried to find any version of the specified browser that is currently installed on the system
#browser=chrome_60_0_3112_101
#browser=chrome_65_0_3325_181
#browser=chrome
#browser=firefox_52_3_0_esr
browser=firefox_102_0_8
#browser=firefox


# If "true" the browser is opened invisibly to the user of this machine. Still all the simulated actions can be performed 
#        (including taking screenshots in case of problems).
# If "false" or anything else (including empty) the browser is opened in the foreground and the user can watch how the 
#         browser actions are performed automatically.
# HINT: Known to work only with chrome >= 65 and firefox >= 59
isheadlessmode=true

# Default wait time (until an exception will be thrown) in seconds for implicit and explicit wait condition, e.g. for 
#      search an element and it is not found this time is the maximum duration during which the element is searched again.
#      Implicit 0 means not waiting at all -> first search must find the element
#      Explicit 0 means not waiting at all -> first search must find the element
selenium.wait.time.implicit=0
# This property is to be used as default explicit wait in the predefined convenience methods for finding/clicking on elements.
selenium.wait.time.explicit=180

#Time is in seconds

# if negative waits forever, Since geko driver doesn't support negative time out , a condition is addded if time out is negative , page load time out method not called.
selenium.wait.time.pageload=-60
# if negative waits forever, Since geko driver doesn't support negative time out , a condition is addded if time out is negative , script load time out method not called.
selenium.wait.time.script=-60

# Used in firefox driver: mimetypes (comma separated) of files that shall be directly downloaded without opening a "Save" dialog.
firefox.directdownload.mimetypes=application/xml,application/zip,text/plain,text/xml,image/jpeg,text/csv,application/octet-stream,application/vnd.ms-excel

# In case a HAR file shall be created per executed test class set it to "true".
# THis is realized by starting a local proxy that the browser is using. Finally the proxy is then creating the HAR file.
createHARFile = false

#In case screen shot required only for failed test steps/actions.
isScreenShortsRequiredForOnlyFailedCase =false